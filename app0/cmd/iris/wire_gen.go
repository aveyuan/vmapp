// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/kataras/iris/v12"
	"vmapp/app0/internal/biz/usecase"
	"vmapp/app0/internal/conf"
	"vmapp/app0/internal/data/base"
	"vmapp/app0/internal/data/user_repo"
	"vmapp/app0/internal/server"
	"vmapp/app0/internal/service"
)

import (
	_ "go.uber.org/automaxprocs"
)

// Injectors from wire.go:

func wireIrisApp(ac *conf.AppConf, bc *conf.BootComponent) (*iris.Application, func(), error) {
	data, cleanup, err := base.NewData(ac, bc)
	if err != nil {
		return nil, nil, err
	}
	userRepo := user_repo.NewUserRepo(data, bc)
	transaction := base.NewTransaction(data)
	userCase := usecase.NewUserCase(userRepo, transaction, bc)
	irisUserService := service.NewIrisUserService(ac, bc, userCase)
	application := server.NewIris(ac, bc, irisUserService, data)
	return application, func() {
		cleanup()
	}, nil
}
